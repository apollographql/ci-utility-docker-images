name: "Build Docker Image"
description: "Build a Docker Image and push it to the given registry"
inputs:
  directory:
    description: "The folder that contains the Dockerfile and all that's needed to build the image"
    required: true
  image_name:
    description: "The name of the image to build"
    required: true
  image_registry:
    description: "The registry the image should be pushed to"
    required: true
  namespaced_image_registry:
    description: "The namespaced registry the image should be pushed to"
    required: true
  image_registry_username:
    description: "The username of the repository for the image"
    required: true
  image_registry_password:
    description: "The password for the image repository"
    required: true
  image_description:
    description: "A description of the image being built"
    required: true
  tags:
    description: "A multi-line string that can be passed to the docker/metadata-action"
    required: true
  platforms:
    description: "A comma separated list of the platforms to build for"
    required: true
  wiz_client_id:
    description: "Client ID associated with the Wiz Container Scanning Tool We Use"
    required: true
  wiz_client_secret:
    description: "Secret associated with the Wiz Container Scanning Tool We Use"
    required: true

runs:
  using: composite
  steps:
    - name: Log in to the Container Registry
      uses: docker/login-action@6d4b68b490aef8836e8fb5e50ee7b3bdfa5894f0
      with:
        registry: ${{ inputs.image_registry }}
        username: ${{ inputs.image_registry_username }}
        password: ${{ inputs.image_registry_password }}
    - name: Set up Docker
      uses: docker/setup-docker-action@efe6ba76e30de04f1a84d4aa6ea0d802d73b31b9
      with:
        daemon-config: |
          {
            "features": {
              "containerd-snapshotter": true
            }
          }
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@3f1544eb9eff0b4d4d279b33f704a06fcf8d0e43
    - name: Get Docker Metadata
      id: meta
      uses: docker/metadata-action@418e4b98bf2841bd337d0b24fe63cb36dc8afa55
      env:
        DOCKER_METADATA_PR_HEAD_SHA: true
      with:
        images: ${{ inputs.namespaced_image_registry }}/${{ inputs.image_name }}
        tags: ${{ inputs.tags }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image_name }}
          org.opencontainers.image.description=${{ inputs.image_description }}
          org.opencontainers.image.vendor=Apollo GraphQL
          org.opencontainers.image.licenses=MIT
        annotations: |
          org.opencontainers.image.title=${{ inputs.image_name }}
          org.opencontainers.image.description=${{ inputs.description }}
          org.opencontainers.image.vendor=Apollo GraphQL
          org.opencontainers.image.licenses=MIT
    - name: Build and Load Docker Image For Testing
      id: build-for-testing
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
      with:
        context: ${{ inputs.directory }}
        file: ${{ inputs.directory }}/Dockerfile
        load: true
        tags: ${{ inputs.image_name }}:test
        platforms: ${{ inputs.platforms }}
    - name: Install Wiz CLI
      shell: bash
      working-directory: ${{ runner.temp }}
      run: |
        sudo apt-get update
        sudo apt-get install gpg
        curl -Lo wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
        curl -Lo wizcli-sha256 https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64-sha256
        curl -Lo wizcli-sha256.sig https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64-sha256.sig
        curl -Lo wiz_public_key.asc https://downloads.wiz.io/wizcli/public_key.asc
        gpg --import wiz_public_key.asc
        gpg --verify wizcli-sha256.sig wizcli-sha256
        echo "$(cat wizcli-sha256) wizcli" | sha256sum --check
        chmod +x wizcli
    - name: Authenticate Wiz CLI
      shell: bash
      working-directory: ${{ runner.temp }}
      run: |
        ./wizcli auth --id ${{ inputs.wiz_client_id }} --secret ${{ inputs.wiz_client_secret }}
    - name: Scan Image
      shell: bash
      working-directory: ${{ runner.temp }}
      run: |
        mkdir -p ${{ inputs.image_name }}
        ./wizcli docker scan \
          --image ${{ inputs.image_name }}:test \
          --dockerfile ${{ inputs.directory }}/Dockerfile \
          --policy "Apollo-Default-Vulnerabilities-Policy" \
          --sbom-format spdx-json \
          --sbom-output-file ${{ inputs.image_name }}/sbom.json \
          --timeout "0h9m0s" \
          --sensitive-data
    - name: Build and Push Docker image
      id: push
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
      with:
        context: ${{ inputs.directory }}
        file: ${{ inputs.directory }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        annotations: ${{ steps.meta.outputs.annotations }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ inputs.platforms }}